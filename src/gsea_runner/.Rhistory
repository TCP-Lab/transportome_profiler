rm(list=ls()) # Clear the env
# We need to have epimod installed.
# There is detailed guide in the epimod pages
# You MUST run library(). Just requireNamespace() does not load everything
# that is required.
library(epimod)
# This generates and saves a new file
model.generation(net_fname = "2_sir.PNPRO", out_fname = "my_sir_model")
model.analysis(
solver_fname = "./my_sir_model.solver", # The .solver file we generated before
i_time = 0, # Initial time, by default 0
f_time = 100, # Final time
s_time = 1 # The "step time", the length of each time step
# You get (f_time - i_time) / s_time data point
)
solutions <- list()
solutions$my_sir_model <- read_table("./my_sir_model_analysis/my_sir_model-analysis-1.trace")
setwd("~/Files/repos/MTP-DB/src/gsea_runner")
BiocManager::install("fgsea")
BiocManager::install("fgsea", force = TRUE)
?fgsea::fgsea
data(examplePathways)
library(fgsea)
data(examplePathways)
examplePathways
data(exampleRanks)
exampleRanks
head(exampleRanks)
library(tidyverse)
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
files <- list.files(path = folder)
print(files)
}
genesets <- load_genesets("~/Files/repos/MTP-DB/src/make_genesets/out/")
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/make_genesets/out/")
list.files("/home/hedmad/Files/repos/MTP-DB/src/make_genesets/out/")
list.files("/home/hedmad/Files/repos/MTP-DB/src/make_genesets/out")
list.files("/home/hedmad/Files/repos/MTP-DB/src/make_genesets/out")
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
files <- list.files(path = folder)
files <- file.path(folder, files)
}
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
files <- list.files(path = folder)
files <- file.path(folder, files)
print(files)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
?list.files
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
files <- list.files(path = folder)
files <- file.path(folder, files)
folder |> list.files() %>% file.path(folder, .) -> files
print(files)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
read_table("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out//whole_transportome_id.txt")
?read_table("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out//whole_transportome_id.txt")
read_table("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out//whole_transportome_id.txt", col_names = "ensg")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(files)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")
}
print(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")
}
print(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
examplePathways$1221633_Meiotic_Synapsis
examplePathways[[1]]
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")["ensg"]
}
print(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")$ensg
}
print(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
?read_table
options(readr.num_columns = 0)
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
print(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
return(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file)
print(head(data))
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file)
data <- na.omit(data)
print(data)
}
?select
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
print(data)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
print(named_vec)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
head(ranks)
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
return(named_vec)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file, show_col_types = FALSE)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
return(named_vec)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
?fgsea
?fgsea::fgsea
run_gsea <- function(results_folder, genesets, ranks) {
result <- fgsea::fgsea(
pathways = genesets,
ranks = ranks
)
print(head(result))
}
run_gsea("/tmp/test_gsea/", genesets, ranks)
run_gsea <- function(results_folder, genesets, ranks) {
result <- fgsea::fgsea(
pathways = genesets,
stats = ranks
)
print(head(result))
}
run_gsea("/tmp/test_gsea/", genesets, ranks)
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
filter_values <- reduce(data, c)
filter_values <- unique(filter_values)
# Convert from ENSG to gene symbol
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = filter_values,
mart = hs.embl
)
ensg_to_symbol <- function(ensgs) {
symbols <- annotations$hgnc_symbol[annotations$ensembl_gene_id %in% ensgs]
return(symbols)
}
data <- lapply(data, ensg_to_symbol)
return(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
run_gsea("/tmp/test_gsea/", genesets, ranks)
test_gsea <- run_gsea("/tmp/test_gsea/", genesets, ranks)
test_gsea
?arrange
test_gsea |> arrange(padj)
run_gsea <- function(genesets, ranks) {
result <- fgsea::fgsea(
pathways = genesets,
stats = ranks
)
result
}
run_all_gsea <- function(input_data_folder, genesets_folder_path) {
file_names <- list.dirs(input_data_folder)
file_paths <- file.path(input_data_folder, file_names)
genesets <- load_genesets(genesets_folder_path)
results <- list()
for (i in seq_along(file_names)) {
ranks <- extract_ranks(file_paths[i])
results[[file_names[i]]] <- run_gsea(genesets, ranks)
}
return(results)
}
run_all_gsea("/home/hedmad/Desktop/test_gsea_data/", "/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
run_all_gsea <- function(input_data_folder, genesets_folder_path) {
file_names <- list.files(input_data_folder)
file_paths <- file.path(input_data_folder, file_names)
genesets <- load_genesets(genesets_folder_path)
results <- list()
for (i in seq_along(file_names)) {
ranks <- extract_ranks(file_paths[i])
results[[file_names[i]]] <- run_gsea(genesets, ranks)
}
return(results)
}
run_all_gsea("/home/hedmad/Desktop/test_gsea_data/", "/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
results <- run_all_gsea("/home/hedmad/Desktop/test_gsea_data/", "/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
results$`wangh_Limma - DEG Table tumor-normal.csv`
results$`wangh_Limma - DEG Table tumor-normal.csv` |> head()
results$`wangh_Limma - DEG Table tumor-normal.csv` |> arrange(padj) |> head()
results$`wangh_Limma - DEG Table tumor-normal.csv` |> arrange(padj) -> rarra
plot_gsea <- function(genesets, ranks) {
results <- list()
for (i in seq_along(genesets)) {
p <- fgsea::plotEnrichment(genesets[[i]], ranks)
results[[names(genesets)[i]]] <- p
}
return(results)
}
run_all_gsea <- function(input_data_folder, genesets_folder_path) {
file_names <- list.files(input_data_folder)
file_paths <- file.path(input_data_folder, file_names)
genesets <- load_genesets(genesets_folder_path)
results <- list()
for (i in seq_along(file_names)) {
ranks <- extract_ranks(file_paths[i])
results[[file_names[i]]] <- run_gsea(genesets, ranks)
results[[paste0("plot_", file_names[[i]])]] <- plot_gsea(genesets, ranks)
}
return(results)
}
results <- run_all_gsea("/home/hedmad/Desktop/test_gsea_data/", "/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
print(results$`plot_jankyr_Limma - DEG Table tumor-normal.csv`)
print(results$`plot_jankyr_Limma - DEG Table tumor-normal.csv`$`channels_carried_solute_K+.txt`)
results$`jankyr_Limma - DEG Table tumor-normal.csv`
results$`jankyr_Limma - DEG Table tumor-normal.csv` |> head()
results$`wangh_Limma - DEG Table tumor-normal.csv` |> arrange(padj) -> rarra
rarra
fgsea::plotGseaTable(genesets, ranks, test_gsea)
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
biomaRt::listFilters(hs.embl)
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
filter_values <- reduce(data, c)
filter_values <- unique(filter_values)
# Convert from ENSG to gene symbol
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "gene_biotype"),
filters = "ensembl_gene_id",
values = filter_values,
mart = hs.embl
)
print(head(annotations))
ensg_to_symbol <- function(ensgs) {
symbols <- annotations$hgnc_symbol[annotations$ensembl_gene_id %in% ensgs]
return(symbols)
}
data <- lapply(data, ensg_to_symbol)
return(data)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file, show_col_types = FALSE)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("hgnc_symbol", "gene_biotype"),
filters = "hgnc_symbol",
values = names(named_vec),
mart = hs.embl
)
coding <- annotations$hgnc_symbol[annotations$hgnc_symbol == "coding"]
named_vec <- named_vec[names(named_vec) %in% coding]
return(named_vec)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
options(readr.num_columns = 0)
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
filter_values <- reduce(data, c)
filter_values <- unique(filter_values)
# Convert from ENSG to gene symbol
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = filter_values,
mart = hs.embl
)
print(head(annotations))
ensg_to_symbol <- function(ensgs) {
symbols <- annotations$hgnc_symbol[annotations$ensembl_gene_id %in% ensgs]
return(symbols)
}
data <- lapply(data, ensg_to_symbol)
return(data)
}
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file, show_col_types = FALSE)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("hgnc_symbol", "gene_biotype"),
filters = "hgnc_symbol",
values = names(named_vec),
mart = hs.embl
)
coding <- annotations$hgnc_symbol[annotations$hgnc_symbol == "coding"]
named_vec <- named_vec[names(named_vec) %in% coding]
return(named_vec)
}
run_gsea <- function(genesets, ranks) {
result <- fgsea::fgsea(
pathways = genesets,
stats = ranks
)
result
}
plot_gsea <- function(genesets, ranks) {
results <- list()
for (i in seq_along(genesets)) {
p <- fgsea::plotEnrichment(genesets[[i]], ranks)
results[[names(genesets)[i]]] <- p
}
return(results)
}
run_all_gsea <- function(input_data_folder, genesets_folder_path) {
file_names <- list.files(input_data_folder)
file_paths <- file.path(input_data_folder, file_names)
genesets <- load_genesets(genesets_folder_path)
results <- list()
for (i in seq_along(file_names)) {
ranks <- extract_ranks(file_paths[i])
results[[file_names[i]]] <- run_gsea(genesets, ranks)
results[[paste0("plot_", file_names[[i]])]] <- plot_gsea(genesets, ranks)
}
return(results)
}
genesets <- load_genesets("/home/hedmad/Files/repos/MTP-DB/src/geneset_maker/out/")
load_genesets <- function(folder) {
# Load genesets as made by "make_genesets.py"
file_names <- list.files(folder)
file_paths <- file.path(folder, file_names)
data <- list()
for (i in seq_along(file_names)) {
data[[ file_names[i] ]] <- read_table(file_paths[i], col_names = "ensg")[["ensg"]]
}
filter_values <- reduce(data, c)
filter_values <- unique(filter_values)
# Convert from ENSG to gene symbol
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = filter_values,
mart = hs.embl
)
ensg_to_symbol <- function(ensgs) {
symbols <- annotations$hgnc_symbol[annotations$ensembl_gene_id %in% ensgs]
return(symbols)
}
data <- lapply(data, ensg_to_symbol)
return(data)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
test_gsea <- run_gsea(genesets, ranks)
test_gsea
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file, show_col_types = FALSE)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("hgnc_symbol", "gene_biotype"),
filters = "hgnc_symbol",
values = names(named_vec),
mart = hs.embl
)
coding <- annotations$hgnc_symbol[annotations$hgnc_symbol == "coding"]
print(coding)
named_vec <- named_vec[names(named_vec) %in% coding]
return(named_vec)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
extract_ranks <- function(deg_file) {
data <- read_csv(deg_file, show_col_types = FALSE)
data |> select(all_of(c("SYMBOL", "t"))) -> data
data <- na.omit(data)
named_vec <- data$t
names(named_vec) <- data$SYMBOL
embl <- biomaRt::useEnsembl(biomart = "genes")
hs.embl <- biomaRt::useDataset(dataset = "hsapiens_gene_ensembl", mart = embl)
annotations <- biomaRt::getBM(
attributes = c("hgnc_symbol", "gene_biotype"),
filters = "hgnc_symbol",
values = names(named_vec),
mart = hs.embl
)
coding <- annotations$hgnc_symbol[annotations$gene_biotype == "protein_coding"]
print(coding)
named_vec <- named_vec[names(named_vec) %in% coding]
return(named_vec)
}
ranks <- extract_ranks("~/Downloads/jankyr_Limma - DEG Table tumor-normal.csv")
test_gsea <- run_gsea(genesets, ranks)
test_gsea |> arrange(padj)
test_gsea |> arrange(padj) |> head(10)
ranks <- extract_ranks("~/Downloads/wangh_Limma - DEG Table tumor-normal.csv")
ranks <- extract_ranks("/home/hedmad/Desktop/test_gsea_data/wangh_Limma - DEG Table tumor-normal.csv")
test_gsea <- run_gsea(genesets, ranks)
test_gsea
test_gsea |> arrange(padj) |> head(10)
test_gsea |> select(all_of(pathway, padj))
test_gsea |> select(all_of("pathway", "padj"))
test_gsea |> select(all_of(c("pathway", "padj")))
test_gsea |> select(all_of(c("pathway", "padj"))) |> arrange(padj)
test_gsea |> arrange(padj)
results$`wangh_Limma - DEG Table tumor-normal.csv` |> arrange(padj) |> head(10)
test_gsea |> arrange(padj) |> head(10)
